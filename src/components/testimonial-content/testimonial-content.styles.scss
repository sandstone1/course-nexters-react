
// in order to use the sass variables in App.scss, I had to use @import "";
@import "../../App.scss";

.testimonial-content {
    grid-area   : TC;

    // since this is a one dimensional layout, let's use flexbox to vertically center the
    // elements and to that we use the following key value pairs: " display : flex; " and
    // " flex-direction : column; " and " justify-content : center; " and remember justify
    // content centers items along the main axis, which in this case is the vertical axis
    
    // we could use grid to center the items vertically by doing: " display : grid " and
    // " align-content : center; " and " justify-items : start; " and we end up with the
    // exact same layout as we have by using flexbox below

    display         : flex;
    flex-direction  : column; 
    justify-content : center;

    // we do have one problem however, which is the button is spanning accross the entire
    // container on the x axis and this is due to align-items being set to " stretch " by
    // default so to fix this we set align-items to " start "

    align-items : flex-start; 

    // for padding, we want the padding to be dynamic so that as we decrease the viewport the
    // padding decreases as well; otherwise, a hardcoded right and left padding number that
    // looked perfectly fine on a large screen starts taking up too much room as the viewport
    // gets smaller and smaller

    // remember the viewport unit is very helpful when building responsive layouts

    padding         : 6rem 8vw;

    background-color : $color-grey-light-1;

    > .heading-2 {
        margin-bottom : 3rem;

        font-family : $font-display-2;
        font-size   : 4rem;
        font-style  : italic; 
        font-weight : 400;
        color       : $color-grey-dark-1;
        line-height : 1.0; 
    }

    > .heading-3 {
        margin-bottom : 2rem;

        font-family    : $font-display-2;
        font-size      : 1.6rem;
        font-style     : italic; 
        font-weight    : 400;
        color          : $color-primary;
        text-transform : uppercase; 
    }

    &--text {
        margin-bottom : 4rem;

        font-size  : 1.5rem;
        font-style : italic;  
    }

    > .btn {
        @include button();

        // had to do " outline : none; " in order to get rid of the weird outline or coloring
        // around the button element after clicking the button

        outline : none;
    }

}